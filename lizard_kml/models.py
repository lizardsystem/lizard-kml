# (c) Nelen & Schuurmans.  GPL licensed, see LICENSE.txt.
from django.db import models
from django.utils.translation import ugettext_lazy as _


class Category(models.Model):
    """
    A category of KML resources, for example "Bathymetrie" or "Kustlijnen".
    One Category contains many KmlResource's.
    """

    name = models.CharField(_('name'), max_length=40)
    description = models.TextField(_('description'), null=True, blank=True)

    def __unicode__(self):
        return u'%s' % self.name

    class Meta:
        ordering = ('name', )


class KmlResource(models.Model):
    """
    A resource can be a dynamic KML (generated by the server) or static KML, in which case
    we only need to URL to the KML file.
    A KmlResource belongs to one Category.
    """

    name = models.CharField(_('name'), max_length=80)
    description = models.TextField(_('description'), null=True, blank=True)
    # is_dynamic indicates whether to use kml_type or url ...
    # not quite BCNF but that's not really relevant with such a tiny domain model
    is_dynamic = models.BooleanField(_('is_dynamic'))
    kml_type = models.CharField(_('kml_type'), max_length=40, blank=True, null=True)
    url = models.CharField(_('url'), max_length=200, blank=True, null=True)
    category = models.ForeignKey('Category', null=True, blank=True)

    def __unicode__(self):
        return u'%s' % self.name

    class Meta:
        ordering = ('name', )
